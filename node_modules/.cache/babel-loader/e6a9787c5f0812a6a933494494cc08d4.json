{"ast":null,"code":"var _jsxFileName = \"/parvan/reactProjects/tracking/src/components/ShowImage.js\";\nimport React, { Component } from 'react';\nimport emptyImage from '../assests/emptyImage.jpg';\nimport axios from 'axios'; // import Preloader from '../presentational/Preloader';\n// const baseUri = HOST_URL\n\nexport default class ShowImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      srcImages: [],\n      show: false,\n      imgSrc: {\n        emptyImage\n      },\n      width: window.innerHeight,\n      height: 60,\n      preloader: true\n    };\n\n    this.onImgLoad = ({\n      target: img\n    }) => {\n      if (window.innerHeight < img.height) {\n        let finalHeight = window.innerHeight - 20;\n        this.setState({\n          height: finalHeight\n        });\n      } else {\n        this.setState({\n          height: img.height\n        });\n      }\n\n      if (window.innerWidth < img.width) {\n        let finalWidth = window.innerWidth - 20;\n        this.setState({\n          width: finalWidth\n        });\n      } else {\n        this.setState({\n          width: img.width\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getItems();\n  }\n\n  getItems() {\n    const {\n      waybillNumber,\n      data\n    } = this.props;\n    let array = [];\n    data.map(item => {\n      array.push(this.getSrc(waybillNumber, item.type));\n    });\n    this.setState({\n      preloader: false\n    });\n  }\n\n  getSrc(waybillNumber, type, description) {\n    let emptyImageSrc = '';\n    const {\n      imgSrc,\n      preloader\n    } = this.state;\n    const {\n      userName,\n      password\n    } = this.props;\n    const PROTOCOL = process.env.REACT_APP_REMOTE_SERVICE_PROTOCOL;\n    const HOST = process.env.REACT_APP_REMOTE_SERVICE_HOST_NAME;\n    const PORT = process.env.REACT_APP_REMOTE_SERVICE_HOST_PORT;\n    const HOST_URL = `${PROTOCOL}://${HOST}:${PORT}/v1`;\n    const URL = HOST_URL + \"/shipments/\" + waybillNumber + \"/attachments/\" + type; // Api.getImage(URL, { userName: userName, password: password })\n\n    axios.get(URL, {\n      auth: {\n        username: \"teamapp\",\n        password: \"tp#4298\"\n      },\n      responseType: 'arraybuffer'\n    }).then(response => {\n      const base64Str = Buffer.from(response.data, 'binary').toString('base64');\n      emptyImageSrc = {\n        src: `data:image/jpeg;base64,${base64Str}`,\n        type: type\n      };\n      this.state.imgSrc = emptyImageSrc;\n      let joined = this.state.srcImages.concat(emptyImageSrc);\n      this.state.srcImages = joined;\n      this.setState({});\n    }).catch(error => {\n      if (error.message !== \"Network Error\") {\n        if (error.response) {\n          if (error.response.status == 401) {}\n        } else {}\n      }\n    });\n  }\n\n  getAllPictures() {\n    const {\n      waybillNumber\n    } = this.props;\n    let array = [];\n    this.state.srcImages.map((item, index) => {\n      array.push(React.createElement(\"div\", {\n        className: \"col-lg-6 col-md-6\",\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-card-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"el-card-avatar el-overlay-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.src,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"el-overlay\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"list-style-none el-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        className: \"el-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        onClick: () => {\n          const URL = \"/shipments/\" + waybillNumber + \"/attachments/\" + item.type;\n          this.state.imgSrc = this.state.srcImages[index].src;\n          this.state.show = true;\n          this.setState({});\n        },\n        className: \"btn default btn-outline image-popup-vertical-fit el-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"icon-magnifier\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))))), React.createElement(\"div\", {\n        className: \"el-card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"m-b-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, item.type))))));\n    });\n    return array;\n  }\n\n  render() {\n    const {\n      show,\n      imgSrc,\n      width,\n      height,\n      srcImages,\n      preloader\n    } = this.state;\n    const {\n      data\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"row el-element-overlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, data.length == 0 && React.createElement(\"div\", {\n      className: \"col-lg-12 col-xl-12 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"el-card-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      width: \"100%\",\n      src: emptyImage,\n      onLoad: this.onImgLoad,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    })))), preloader ? \" <Preloader /> \" : this.getAllPictures(), show ? React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      className: \"my-mfp-img  my-mfp-bg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.setState({\n        show: false\n      }),\n      style: {\n        \"transform\": \"translate(\" + (width / 2 + 13) + \"px ,-\" + (height / 2 + 12) + \"px)\"\n      },\n      className: \"mfp-close my-mfp-close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"fa fa-times\",\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    })), window.innerHeight < height & window.innerWidth > width ? React.createElement(\"img\", {\n      onLoad: this.onImgLoad,\n      className: \"mfp-img mfp-wrap mfp-bg\",\n      src: imgSrc,\n      width: width,\n      height: window.innerHeight < height & window.innerHeight > height ? height - 200 + \"px\" : \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }) : window.innerWidth < width & window.innerHeight > height ? React.createElement(\"img\", {\n      onLoad: this.onImgLoad,\n      className: \"mfp-img mfp-wrap mfp-bg\",\n      src: imgSrc,\n      width: width,\n      width: window.innerWidth < width ? width - 200 + \"px\" : \"auto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }) : React.createElement(\"img\", {\n      onLoad: this.onImgLoad,\n      className: \" mfp-img mfp-wrap mfp-bg\",\n      src: imgSrc,\n      width: width,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }))) : '');\n  }\n\n}","map":{"version":3,"sources":["/parvan/reactProjects/tracking/src/components/ShowImage.js"],"names":["React","Component","emptyImage","axios","ShowImage","state","srcImages","show","imgSrc","width","window","innerHeight","height","preloader","onImgLoad","target","img","finalHeight","setState","innerWidth","finalWidth","componentDidMount","getItems","waybillNumber","data","props","array","map","item","push","getSrc","type","description","emptyImageSrc","userName","password","PROTOCOL","process","env","REACT_APP_REMOTE_SERVICE_PROTOCOL","HOST","REACT_APP_REMOTE_SERVICE_HOST_NAME","PORT","REACT_APP_REMOTE_SERVICE_HOST_PORT","HOST_URL","URL","get","auth","username","responseType","then","response","base64Str","Buffer","from","toString","src","joined","concat","catch","error","message","status","getAllPictures","index","render","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport emptyImage from '../assests/emptyImage.jpg'\nimport axios from 'axios';\n// import Preloader from '../presentational/Preloader';\n\n// const baseUri = HOST_URL\n\nexport default class ShowImage extends Component {\n    state = {\n        srcImages: [],\n        show: false,\n        imgSrc: { emptyImage },\n        width: window.innerHeight,\n        height: 60,\n        preloader: true\n    }\n\n    onImgLoad = ({ target: img }) => {\n        if (window.innerHeight < img.height) {\n            let finalHeight = window.innerHeight - 20\n            this.setState({\n                height: finalHeight,\n            });\n        } else {\n            this.setState({\n                height: img.height,\n            });\n        }\n        if (window.innerWidth < img.width) {\n            let finalWidth = window.innerWidth - 20\n            this.setState({\n                width: finalWidth,\n            });\n\n        } else {\n            this.setState({\n                width: img.width,\n            });\n        }\n    };\n\n    componentDidMount() {\n        this.getItems()\n    }\n\n    getItems() {\n        const { waybillNumber, data } = this.props\n        let array = []\n        data.map(item => {\n            array.push(this.getSrc(waybillNumber, item.type))\n        })\n        this.setState({ preloader: false })\n    }\n\n    getSrc(waybillNumber, type, description) {\n        let emptyImageSrc = ''\n        const { imgSrc, preloader } = this.state\n        const { userName, password } = this.props\n        const PROTOCOL = process.env.REACT_APP_REMOTE_SERVICE_PROTOCOL;\n        const HOST = process.env.REACT_APP_REMOTE_SERVICE_HOST_NAME;\n        const PORT = process.env.REACT_APP_REMOTE_SERVICE_HOST_PORT;\n        const HOST_URL = `${PROTOCOL}://${HOST}:${PORT}/v1`\n        const URL = HOST_URL +\"/shipments/\" + waybillNumber + \"/attachments/\" + type;\n        // Api.getImage(URL, { userName: userName, password: password })\n        axios.get(URL,\n            {\n            auth: { username:\"teamapp\", password: \"tp#4298\" },\n            responseType: 'arraybuffer'\n        } )\n            .then(response => {\n                const base64Str = Buffer.from(response.data, 'binary').toString('base64')\n                emptyImageSrc = { src: `data:image/jpeg;base64,${base64Str}`, type: type }\n                this.state.imgSrc = emptyImageSrc\n                let joined = this.state.srcImages.concat(emptyImageSrc)\n                this.state.srcImages = joined\n                this.setState({})\n            }).catch(error => {\n                if (error.message !== \"Network Error\") {\n                    if (error.response) {\n                        if (error.response.status == 401) {\n                        }\n                    } else {\n                    }\n                }\n            })\n    }\n\n    getAllPictures() {\n        const { waybillNumber } = this.props\n        let array = []\n        this.state.srcImages.map((item, index) => {\n            array.push(\n                <div className=\"col-lg-6 col-md-6\" key={index}>\n                    <div className=\"card\">\n                        <div className=\"el-card-item\">\n                            <div className=\"el-card-avatar el-overlay-1\">\n                                <img src={item.src} />\n                                <div className=\"el-overlay\">\n                                    <ul className=\"list-style-none el-info\">\n                                        <li className=\"el-item\">\n                                            <span\n                                                onClick={() => {\n                                                    const URL = \"/shipments/\" + waybillNumber + \"/attachments/\" + item.type;\n                                                    this.state.imgSrc = this.state.srcImages[index].src\n                                                    this.state.show = true\n                                                    this.setState({})\n                                                }\n                                                }\n                                                className=\"btn default btn-outline image-popup-vertical-fit el-link\"\n                                            >\n                                                <i className=\"icon-magnifier\"></i></span>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"el-card-content\">\n                                <h4 className=\"m-b-0\">{item.type}</h4>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        )\n        return (array)\n    }\n\n    render() {\n        const { show, imgSrc, width, height, srcImages, preloader } = this.state\n        const { data } = this.props\n        return (\n            <div className=\"row el-element-overlay\">\n                {data.length == 0 &&\n                    <div className=\"col-lg-12 col-xl-12 col-md-12\" >\n                        <div className=\"card\">\n                            <div className=\"el-card-item\">\n                                <img width=\"100%\"\n                                src={emptyImage} onLoad={this.onImgLoad}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                }\n\n                {preloader ?\n                   \" <Preloader /> \"\n                    :\n                    this.getAllPictures()}\n                {show ? <>\n                    <div className=\"my-mfp-img  my-mfp-bg\"\n                    >\n                        <button onClick={() => this.setState({ show: false })}\n                            style={{ \"transform\": \"translate(\" + (width / 2 + 13) + \"px ,-\" + (height / 2 + 12) + \"px)\" }}\n                             className=\"mfp-close my-mfp-close\">\n                            <i className=\"fa fa-times\" aria-hidden=\"true\"></i></button>\n\n                        {window.innerHeight < height & window.innerWidth > width ?\n                            <img\n                                onLoad={this.onImgLoad}\n                                className=\"mfp-img mfp-wrap mfp-bg\"\n                                src={imgSrc}\n                                width={width}\n                                height={window.innerHeight < height & window.innerHeight > height ? (height - 200) + \"px\" : \"auto\"}\n                            /> :\n                            window.innerWidth < width & window.innerHeight > height ? <img\n                                onLoad={this.onImgLoad}\n                                className=\"mfp-img mfp-wrap mfp-bg\"\n                                src={imgSrc}\n                                width={width}\n                                width={window.innerWidth < width ? (width - 200) + \"px\" : \"auto\"}\n\n                            /> :\n                                 <img\n                                    onLoad={this.onImgLoad}\n                                     className=\" mfp-img mfp-wrap mfp-bg\"\n                                     src={imgSrc}\n                                     width={width}\n                                 />\n                        }\n                    </div>\n                </>\n                    : ''\n                }\n            </div>)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}