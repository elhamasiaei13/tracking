{"ast":null,"code":"var _jsxFileName = \"/parvan/reactProjects/tracking/src/components/persentational/Card.js\";\nimport React, { Component } from 'react';\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl';\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      convertTitle: ''\n    };\n  }\n\n  render() {\n    const {\n      body,\n      cardTitle,\n      cardSubtitle,\n      cardClass,\n      cardBodyClass,\n      noHr\n    } = this.props;\n    const {\n      intl\n    } = this.props;\n    const title = intl.formatMessage({\n      id: [cardTitle]\n    }); // const convertTitle = intl.formatMessage({ id: [cardTitle] ,value:{ what: 'react-intl' }})\n    // const convertTitle = (<FormattedMessage {...messages.placeholderIntlText}>\n    //     {(msg) => (cardTitle)}\n    //   </FormattedMessage>)\n\n    return React.createElement(\"div\", {\n      className: \"card \" + cardClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-body \" + cardBodyClass,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, cardTitle != 'false' ? React.createElement(React.Fragment, null, React.createElement(\"h4\", {\n      className: \"card-title text-info m-b-0\",\n      style: {\n        \"margin\": \"0px 0px 10px 0px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, cardTitle), noHr ? '' : React.createElement(\"hr\", {\n      className: \"hrCard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, null), cardSubtitle ? React.createElement(\"h6\", {\n      className: \"card-subtitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \" \", cardSubtitle, \" \") : '', body, this.props.children));\n  }\n\n}\n\nCard.defaultProps = {\n  cardClass: \"card border-top border-dark\",\n  cardTitle: \"false\",\n  cardBodyClass: '',\n  cardSubtitle: false\n};\nexport default injectIntl(Card);","map":{"version":3,"sources":["/parvan/reactProjects/tracking/src/components/persentational/Card.js"],"names":["React","Component","FormattedMessage","injectIntl","intlShape","Card","constructor","props","state","convertTitle","render","body","cardTitle","cardSubtitle","cardClass","cardBodyClass","noHr","intl","title","formatMessage","id","children","defaultProps"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAwD,YAAxD;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGH;;AAGDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmBC,MAAAA,YAAnB;AAAiCC,MAAAA,SAAjC;AAA4CC,MAAAA,aAA5C;AAA2DC,MAAAA;AAA3D,QAAoE,KAAKT,KAA/E;AACA,UAAM;AAAEU,MAAAA;AAAF,QAAW,KAAKV,KAAtB;AACA,UAAMW,KAAK,GAAGD,IAAI,CAACE,aAAL,CAAmB;AAAEC,MAAAA,EAAE,EAAE,CAACR,SAAD;AAAN,KAAnB,CAAd,CAJK,CAKL;AACA;AACA;AACA;;AACA,WACI;AAAK,MAAA,SAAS,EAAE,UAAUE,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAE,eAAeC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKH,SAAS,IAAI,OAAb,GAAuB,0CAAE;AAAI,MAAA,SAAS,EAAC,4BAAd;AACtB,MAAA,KAAK,EAAE;AAAE,kBAAU;AAAZ,OADe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAErBA,SAFqB,CAAF,EAGnBI,IAAI,GAAG,EAAH,GACD;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJgB,CAAvB,GAKK,yCANV,EAOKH,YAAY,GAAG;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgCA,YAAhC,MAAH,GAAyD,EAP1E,EAQKF,IARL,EASK,KAAKJ,KAAL,CAAWc,QAThB,CADJ,CADJ;AAgBH;;AAlCwB;;AAoC7BhB,IAAI,CAACiB,YAAL,GAAoB;AAChBR,EAAAA,SAAS,EAAE,6BADK;AAEhBF,EAAAA,SAAS,EAAE,OAFK;AAGhBG,EAAAA,aAAa,EAAE,EAHC;AAIhBF,EAAAA,YAAY,EAAE;AAJE,CAApB;AAMA,eAAeV,UAAU,CAACE,IAAD,CAAzB","sourcesContent":["\nimport React, { Component } from 'react'\nimport { FormattedMessage, injectIntl, intlShape } from 'react-intl'\n\nclass Card extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            convertTitle: ''\n        }\n    }\n\n\n    render() {\n\n        const { body, cardTitle, cardSubtitle, cardClass, cardBodyClass, noHr } = this.props\n        const { intl } = this.props\n        const title = intl.formatMessage({ id: [cardTitle] });\n        // const convertTitle = intl.formatMessage({ id: [cardTitle] ,value:{ what: 'react-intl' }})\n        // const convertTitle = (<FormattedMessage {...messages.placeholderIntlText}>\n        //     {(msg) => (cardTitle)}\n        //   </FormattedMessage>)\n        return (\n            <div className={\"card \" + cardClass}>\n                <div className={\"card-body \" + cardBodyClass}>\n                    {cardTitle != 'false' ? <><h4 className=\"card-title text-info m-b-0\"\n                        style={{ \"margin\": \"0px 0px 10px 0px\" }}>\n                        {cardTitle}</h4>\n                        {noHr ? '' :\n                            <hr className=\"hrCard\" />}\n                    </> : <></>}\n                    {cardSubtitle ? <h6 className=\"card-subtitle\"> {cardSubtitle} </h6> : ''}\n                    {body}\n                    {this.props.children}\n                </div>\n               \n            </div>\n        )\n    }\n}\nCard.defaultProps = {\n    cardClass: \"card border-top border-dark\",\n    cardTitle: \"false\",\n    cardBodyClass: '',\n    cardSubtitle: false\n}\nexport default injectIntl(Card) \n"]},"metadata":{},"sourceType":"module"}